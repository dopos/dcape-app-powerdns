# dcape-app-powerdns Makefile
# for use as part od dcape

SHELL             = /bin/bash

#- ******************************************************************************
#- Powerdns: dcape core config

#- powerdns docker image
PDNS_IMAGE       ?= $(PDNS_IMAGE0)

#- powerdns docker image version
PDNS_VER         ?= $(PDNS_VER0)

#- Stats site host
PDNS_HOST        ?= ns.$(DCAPE_DOMAIN)

#- Wildcard zone nameserver
#- NS value for $(DCAPE_DOMAIN) CNAME record
#- Used for zone SOA record & for internal access from traefik
ACME_NS          ?= ns.$(DCAPE_DOMAIN)
#- Setup ACME zone for this domain
#- CNAME value for $(DCAPE_DOMAIN) record
ACME_DOMAIN      ?= acme-$(DCAPE_DOMAIN)
#- Admin email for wildcard zone SOA recors
ACME_ADMIN_EMAIL ?= $(TRAEFIK_ACME_EMAIL)

#- ------------------------------------------------------------------------------
#- Powerdns: internal config

#- Database name and database user name
PDNS_DB_TAG      ?= pdns
#- Database user password
PDNS_DB_PASS     ?= $(shell openssl rand -hex 16; echo)

#- dcape root directory
DCAPE_ROOT       ?= $(DCAPE_ROOT)

# DB tag and pass vars prefix
NAME             ?= PDNS

# User who runs bootstrap code
DB_ADMIN_USER     = $(PDNS_DB_TAG)

# for powerdns-load-sql
ZONE_SQL         ?= zone.sql

# ------------------------------------------------------------------------------

include $(DCAPE_ROOT)/Makefile.dcape


init:
	@if [[ "$$PDNS_VER0" != "$$PDNS_VER" ]] ; then \
	  echo "Warning: PDNS_VER in dcape ($$PDNS_VER0) differs from yours ($$PDNS_VER)" ; \
	fi
	@echo "  Stats URL: $(DCAPE_SCHEME)://$(PDNS_HOST)"
	@echo "  Listen: $(PDNS_LISTEN)"

# create user, db and load sql
.setup-before-up: db-create db-load-acme

db-load-acme:
	@echo "*** $@ ***" ; \
	[[ "$$DNS" != "wild" ]] || cat setup.acme.sql | $(MAKE) -s compose CMD="exec -T db psql -U $$PDNS_DB_TAG -d $$PDNS_DB_TAG -vACME_DOMAIN=$$ACME_DOMAIN -vACME_NS=$$ACME_NS -vNS_ADMIN=$$ACME_ADMIN_EMAIL" || true

# load powerdns zone from $(ZONE_SQL)
# Example: make powerdns-load-sql ZONE_SQL=z.sql DCAPE_STACK=1
powerdns-load-sql: $(ZONE_SQL) docker-wait
	cat $(ZONE_SQL) | $(MAKE) -s compose CMD="exec -T db psql -U $$PDNS_DB_TAG -d $$PDNS_DB_TAG"
